<!DOCTYPE html>
<html lang="pt-br">
<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/Loopple/loopple-public-assets@main/riva-dashboard-tailwind/riva-dashboard.css">
</head>
<body class="bg-white">
    <div class="container flex mx-auto bg-white">
        <aside class="group/sidebar flex flex-col shrink-0 lg:w-[300px] w-[250px] transition-all duration-300 ease-in-out m-0 fixed z-40 inset-y-0 left-0 bg-white border-r border-r-dashed border-r-neutral-200 sidenav fixed-start loopple-fixed-start" id="sidenav-main">
            <div class="flex shrink-0 px-8 items-center justify-between h-[96px]">
                <h1>Painel de APIS</h1>
            </div>
            <div class="hidden border-b border-dashed lg:block dark:border-neutral-700/70 border-neutral-200"></div>
            <div class="relative pl-3 my-5 overflow-y-scroll">
                <div class="flex flex-col w-full font-medium">
                    <!-- menu item -->
                    <div>
                        <h1>Apis Disponíveis para você</h1>
                        <span class="select-none flex items-center px-4 py-[.775rem] cursor-pointer my-[.4rem] rounded-[.95rem]">
                            <a id="apiXvideos" class="flex items-center flex-grow text-[1.15rem] dark:text-neutral-400/75 text-stone-500 hover:text-dark">APi Xvideos</a>
                        </span>
                    </div>
                    <div>
                        <span class="select-none flex items-center px-4 py-[.775rem] cursor-pointer my-[.4rem] rounded-[.95rem]">
                            <a class="flex items-center flex-grow text-[1.15rem] dark:text-neutral-400/75 text-stone-500 hover:text-dark">Api de consulta ou obter IP</a>
                        </span>
                    </div>
                     <div>
                        <span class="select-none flex items-center px-4 py-[.775rem] cursor-pointer my-[.4rem] rounded-[.95rem]">
                            <a href="./api.html" class="flex items-center flex-grow text-[1.15rem] dark:text-neutral-400/75 text-stone-500 hover:text-dark">Ver Documentações</a>
                        </span>
                    </div>
                    <!-- menu item -->
                </div>
            </div>
        </aside>

         <div class="flex flex-col flex-wrap ml-[300px] my-5 w-full max-w-full sm:w-3/4">
        <table class="min-w-full bg-white border border-gray-300">
            <thead>
                <tr class="bg-gray-100">
                    <th class="py-2 px-4 border-b">API Key</th>
                    <th class="py-2 px-4 border-b">Serviço</th>
                    <th class="py-2 px-4 border-b">Queries Restantes</th>
                    <th class="py-2 px-4 border-b">Histórico de Request</th>
                </tr>
            </thead>
            <tbody>
                {{#each registros}}
                    <tr class="border-b">
                        <td class="py-2 px-4">{{this.api}}</td>
                        <td class="py-2 px-4">{{this.service}}</td>
                        <td class="py-2 px-4">{{this.query}}</td>
                        <td class="py-2 px-4"><a href="javascript:void(0);" onclick="abrirDialog('{{this.api}}')">Ver Histórico de Acesso </a></td> 
                    </tr>
                {{/each}}
            </tbody>
        </table>
    </div>

    </div>

    <script>
       function abrirDialog(apiKey) {
    // Requisição à rota /xvideos/history passando a chave apiKey via GET
    fetch(`/xvideos/history?apiKey=${apiKey}`)
        .then(response => response.json())
        .then(apiResponse => {
            // Verifica se a resposta da API é um array válido
            if (Array.isArray(apiResponse) && apiResponse.length > 0) {
                // Formatação dos dados da resposta para exibição no diálogo
                const dadosFormatados = apiResponse.map(item => {
                    return `API: ${item.api}<br>URL: ${item.url}<br>`;
                }).join('<br><br>');

                // Use SweetAlert2 para exibir os dados obtidos no diálogo
                Swal.fire({
                    title: 'Dados Obtidos',
                    html: dadosFormatados,
                    icon: 'info',
                    confirmButtonText: 'Fechar'
                });
            } else {
                

                    Swal.fire(
                    'Erro na Requisição',
                    apiResponse.error,
                    'error'
                    )

                console.error('Resposta inválida da API:', apiResponse);
                
            }
        })
        .catch(error => {
            console.error('Erro na requisição:', error);
            // Tratar o erro de acordo com os requisitos do seu aplicativo
            // Pode ser exibindo uma mensagem de erro ou realizando outra ação necessária
        });
}
        document.getElementById('apiXvideos').addEventListener('click', function () {
            Swal.fire({
                title: 'Criando uma APi para o Xvideos, você terá como limite inicial de 100 query por mês, para aumento consulte o admin',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Sim',
                cancelButtonText: 'Não'
            }).then((result) => {
                if (result.isConfirmed) {
                    submitXvideosAPIRequest();
                }
            });
        });

        function submitXvideosAPIRequest() {
            // Faça a requisição da API Xvideos
            fetch('/api/create/', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ data: 'xvideos' }),
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(response.statusText);
                }
                return response.json();
            })
            .then(result => {
                // Exibe a resposta da API Xvideos
                Swal.fire({
                    title: 'Aviso',
                    text: result.api,
                    
                });
            })
            .catch(error => {
                // Trata erros na requisição
                Swal.fire({
                    title: 'Erro na requisição da API Xvideos',
                    text: error.message,
                    icon: 'error'
                });
            });
        }
    </script>
</body>
</html>
